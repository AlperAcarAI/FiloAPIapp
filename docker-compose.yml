version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: fleetapi-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: fleetuser
      POSTGRES_PASSWORD: fleetpassword
      POSTGRES_DB: fleetdb
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fleetuser -d fleetdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: fleetapi-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: fleetapi-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 5000
      HOST: 0.0.0.0
      DATABASE_URL: postgresql://fleetuser:fleetpassword@postgres:5432/fleetdb
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your_super_secure_jwt_secret_minimum_32_characters}
      SESSION_SECRET: ${SESSION_SECRET:-your_super_secure_session_secret_minimum_32_characters}
      API_RATE_LIMIT: 1000
      DEFAULT_API_KEY: ${DEFAULT_API_KEY:-ak_prod2025_rwba6dj1sw}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
      TRUST_PROXY: true
      MAX_FILE_SIZE: 50MB
      UPLOAD_PATH: /app/uploads
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    ports:
      - "5000:5000"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: fleetapi-nginx
    restart: unless-stopped
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  nginx_cache:
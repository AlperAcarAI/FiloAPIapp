# Environment Variables Template for Fleet Management System
# 
# INSTRUCTIONS:
# 1. Copy this template
# 2. Create a new file named .env in your project root
# 3. Replace all placeholder values with your actual configuration
# 4. Never commit the .env file to version control

# ===== CORE CONFIGURATION =====

# Node Environment (development, production, test)
NODE_ENV=development

# Server Configuration
PORT=5000
HOST=0.0.0.0

# ===== DATABASE CONFIGURATION =====

# PostgreSQL connection string
# Format: postgresql://username:password@host:port/database_name
DATABASE_URL=postgresql://your_db_user:your_db_password@localhost:5432/fleet_management

# ===== SECURITY CONFIGURATION =====

# JWT Secret - Used for token generation
# Generate with: openssl rand -base64 32
JWT_SECRET=replace_with_32_character_minimum_secure_random_string

# Session Secret - Used for session management
# Generate with: openssl rand -base64 32
SESSION_SECRET=replace_with_32_character_minimum_secure_random_string

# Default API Key for system operations
DEFAULT_API_KEY=ak_2025_replace_with_secure_key

# ===== CORS & DOMAIN CONFIGURATION =====

# Allowed origin for CORS
# Development: http://localhost:5000
# Production: https://your-domain.com
CORS_ORIGIN=http://localhost:5000

# Trust proxy headers (set to true if behind reverse proxy)
TRUST_PROXY=false

# Allowed domain for API access (production only)
ALLOWED_DOMAIN=filokiapi.architectaiagency.com

# ===== RATE LIMITING =====

# API rate limit (requests per minute)
API_RATE_LIMIT=1000

# ===== FILE UPLOAD CONFIGURATION =====

# Maximum file size for uploads
MAX_FILE_SIZE=50MB

# Upload directory path
UPLOAD_PATH=./uploads

# ===== LOGGING CONFIGURATION =====

# Log level (debug, info, warn, error)
LOG_LEVEL=debug

# Log file directory
LOG_FILE_PATH=./logs

# ===== OPTIONAL SERVICES =====

# Redis Configuration (for caching and sessions)
# REDIS_URL=redis://localhost:6379

# Email Configuration (for notifications)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASS=your-app-specific-password

# Analytics Configuration
# ENABLE_ANALYTICS=false
# ANALYTICS_KEY=your_analytics_key

# Backup Configuration
# BACKUP_ENABLED=false
# BACKUP_SCHEDULE=0 2 * * *
# BACKUP_RETENTION_DAYS=30

# ===== PRODUCTION-SPECIFIC VALUES =====
# 
# For production deployment, ensure you:
# 1. Set NODE_ENV=production
# 2. Use HTTPS URLs for CORS_ORIGIN
# 3. Set TRUST_PROXY=true if behind a proxy
# 4. Generate new, secure values for all secrets
# 5. Use production database credentials
# 6. Enable logging and monitoring services